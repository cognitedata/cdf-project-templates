externalId: tutorial-load-workitems
name: tutorial-load-Workitems
query: >-
  /* MAPPING_MODE_ENABLED: false */
  /* {"version":1,"sourceType":"raw","mappings":[
  {"from":"externalId","to":"externalId","asType":"STRING"},
  {"from":"description","to":"description","asType":"STRING"},
  {"from":"workOrder","to":"workOrder","asType":"STRUCT<`space`:STRING, `externalId`:STRING>"},
  {"from":"toBeDone","to":"toBeDone","asType":"BOOLEAN"},
  {"from":"itemInfo","to":"itemInfo","asType":"STRING"},
  {"from":"itemName","to":"itemName","asType":"STRING"},
  {"from":"title","to":"title","asType":"STRING"},
  {"from":"criticality","to":"criticality","asType":"STRING"},
  {"from":"method","to":"method","asType":"STRING"},
  {"from":"isCompleted","to":"isCompleted","asType":"BOOLEAN"}],
  "sourceLevel1":"{{raw_db}}","sourceLevel2":"workitems"} */
  select
    cast(`externalId` as STRING) as externalId,
    cast(`description` as STRING) as description,
    node_reference('{{space}}', `workOrder`) as workOrder,
    cast(`toBeDone` as BOOLEAN) as toBeDone,
    cast(`itemInfo` as STRING) as itemInfo,
    cast(`itemName` as STRING) as itemName,
    cast(`title` as STRING) as title,
    cast(`criticality` as STRING) as criticality,
    cast(`method` as STRING) as method,
    cast(`isCompleted` as BOOLEAN) as isCompleted
  from
    `{{raw_db}}`.`workitems`;
destination:
  dataModel:
    space: {{space}}
    externalId: {{datamodel}}
    version: "1"
    destinationType: WorkItem
  instanceSpace: {{space}}
  type: instances
ignoreNullFields: true
shared: true
action: upsert
# Specify credentials separately like this:
# You can also use different credentials for the running transformations than the ones you use to deploy
authentication:
  clientId: {{clientId}}
  clientSecret: {{clientId}}
  tokenUrl: {{tokenUrl}}
  # Optional: If idP requires providing the scopes
  cdfProjectName: {{cdfProjectName}}
  scopes:
    - {{scopes}}
  # Optional: If idP requires providing the audience
  audience: {{audience}}
