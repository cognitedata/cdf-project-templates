---
name: Lint and test
on:
  pull_request:
    branches: [main]
env:
  PYTHON_VERSION: '3.9'
jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: snok/install-poetry@v1
        with:
            version: 1.6.1
            virtualenvs-create: false
      - name: Install dependencies and run lints
        run: |
          # Necessary for running the mypy pre-commit hook
          poetry install
      - uses: pre-commit/action@v3.0.0
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: false
      - name: Install core dependencies
        run: |
          poetry install
      - name: Run pytest
        run: pytest tests
  dry-run-demo:
    runs-on: ubuntu-latest
    environment: dev
    env:
        CDF_CLUSTER: ${{ secrets.CDF_CLUSTER }}
        CDF_PROJECT: ${{ secrets.CDF_PROJECT }}
        IDP_CLIENT_ID: ${{ secrets.IDP_CLIENT_ID }}
        IDP_CLIENT_SECRET: ${{ secrets.IDP_CLIENT_SECRET }}
        IDP_TOKEN_URL: ${{ secrets.IDP_TOKEN_URL }}
    name: Dry Run Demo
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: false
      - name: Install dependencies and build the package
        run: |
          poetry install
          poetry build
      - name: Install cdf-tk
        run: pip install .
      - name: Initialize project
        run: cdf-tk init demo_project
      - name: "Pre-processing for demo environment"
        run: ./demo/preproc.sh
      - name: "Build the templates"
        run: cdf-tk build --build-dir=./build --env=demo ./demo_project
      - name: "Verify and create access rights"
        run: cdf-tk auth verify
      - name: "Test clean --dry-run"
        run: |
          cdf-tk clean --env=demo ./build --dry-run
      - name: "Deploy the templates --dry-run"
        run: |
          cdf-tk deploy --drop --env=demo ./build --dry-run
